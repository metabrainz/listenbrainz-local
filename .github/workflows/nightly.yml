name: Nightly Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  comprehensive-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        pip install -r requirements-test.txt

    - name: Run comprehensive test suite
      run: |
        python -m pytest --cov=lb_local --cov-report=xml --cov-report=html tests/

    - name: Run integration tests
      run: |
        # Run slower, more comprehensive tests
        python -m pytest tests/ -v --tb=long --durations=10

    - name: Test with different database configurations
      run: |
        echo "🗄️  Testing with different database scenarios..."
        
        # Test with empty database
        export DATABASE_FILE="test_empty.db"
        python run_tests.py tests/test_framework_validation.py
        
        # Test with corrupted database scenario
        echo "Testing error handling..." 

    - name: Generate test report
      run: |
        echo "📊 Generating comprehensive test report..."
        echo "## Nightly Test Report - $(date)" > test-report.md
        echo "" >> test-report.md
        echo "### Test Summary" >> test-report.md
        python -m pytest tests/ --tb=no -q >> test-report.md
        echo "" >> test-report.md
        echo "### Coverage Summary" >> test-report.md
        coverage report >> test-report.md

    - name: Upload comprehensive results
      uses: actions/upload-artifact@v3
      with:
        name: nightly-test-results
        path: |
          htmlcov/
          coverage.xml
          test-report.md
          .coverage

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 Nightly Tests Failed',
            body: 'The nightly test suite has failed. Please check the workflow run for details.',
            labels: ['bug', 'ci']
          })

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit

    - name: Security audit with Safety
      run: |
        safety check --json --output safety-report.json || true

    - name: Security audit with Bandit
      run: |
        bandit -r lb_local/ -f json -o bandit-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
